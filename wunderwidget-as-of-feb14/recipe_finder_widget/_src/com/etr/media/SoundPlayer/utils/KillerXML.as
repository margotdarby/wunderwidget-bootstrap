package com.etr.media.SoundPlayer.utils{		import flash.events.*;	import flash.net.*;		public class KillerXML{				private var _data		:XML;		private var _file		:String;		private var _autoLoad	:*;		private var _init		:Object;		private var _loader		:URLLoader;						public function KillerXML($file:String, $init:Object = null){					_file							=			$file;			_init							=			$init || new Object();						if(_init.autoLoad != undefined){				_autoLoad					=			_init.autoLoad;			}						_loader							=			new URLLoader();						XML.ignoreWhitespace			=			true;						if(_autoLoad == undefined){				_autoLoad = true;			}						if(_autoLoad){				load();			}		}						public function toString():String{			return _data;		}				public function load():void{					//_loader.addEventListener(IOErrorEvent.IO_ERROR, ioErrorHandler); 											_loader.addEventListener(Event.COMPLETE, loadComplete);						if(_init.onLoadStart){				_loader.addEventListener(Event.OPEN, _init.onLoadStart);			}						if(_init.onLoadProgress){				_loader.addEventListener(ProgressEvent.PROGRESS, _init.onLoadProgress);			}						if(_init.onLoadError){				_loader.addEventListener(IOErrorEvent.IO_ERROR, _init.onLoadError);			}						_loader.load(new URLRequest(_file));		}						private function loadComplete(e:Event):void{			_loader.removeEventListener(Event.COMPLETE, loadComplete);			if(_init.onLoadStart){				_loader.removeEventListener(Event.OPEN, _init.onLoadStart);			}			if(_init.onLoadProgress){				_loader.removeEventListener(ProgressEvent.PROGRESS, _init.onLoadProgress);			}			if(_init.onLoadError){				_loader.removeEventListener(IOErrorEvent.IO_ERROR, _init.onLoadError);			}						_data = new XML(e.target.data);						if(_init.onLoadComplete){				_init.onLoadComplete(_data);			}		}				private function ioErrorHandler(e:IOErrorEvent):void{			trace("ERROR-->" + e);		}					public function set onLoadStart($f:Function):void{			_init.onLoadStart = $f;		}				public function get onLoadStart():Function{			return _init.onLoadStart;		}				public function set onLoadProgress($f:Function):void{			_init.onLoadProgress = $f;		}				public function get onLoadProgress():Function{			return _init.onLoadProgress;		}				public function set onLoadComplete($f:Function):void{			_init.onLoadComplete = $f;		}				public function get onLoadComplete():Function{			return _init.onLoadComplete;		}				public function set onLoadError($f:Function):void{			_init.onLoadError = $f;		}				public function get onLoadError():Function{			return _init.onLoadError;		}				public function get data():XML{			return _data;		}				public function get autoLoad():Boolean{			return _autoLoad;		}			}	}