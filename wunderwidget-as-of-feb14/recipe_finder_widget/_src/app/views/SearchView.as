package app.views{import flash.events.MouseEvent;import flash.events.Event;import app.events.ModelEvent;//import app.utils.GoogleTracker;import app.views.ui.*;import gs.TweenLite;import gs.easing.*;public class SearchView extends AbstractView {	//-------------------------------------------------------------// PRIVATE VARIABLES//-------------------------------------------------------------	private var _accordianDisplay:AccordianContainer;		private var _courseTabSection:CourseTabSection;		private var _ingredientTabSection:IngredientTabSection;		private var _timeTabSection:TimeTabSection;		private var _searchButton:SearchButton;	//-------------------------------------------------------------// CONSTRUCTOR//-------------------------------------------------------------			public function SearchView(model:Object)	{		super(model);					_courseTabSection = new CourseTabSection(model, 0);				_ingredientTabSection = new IngredientTabSection(model, 1);				_timeTabSection = new TimeTabSection(model, 2);						_accordianDisplay = new AccordianContainer();		_accordianDisplay.addSection(_courseTabSection);		_accordianDisplay.addSection(_ingredientTabSection);		_accordianDisplay.addSection(_timeTabSection);				addChild(_accordianDisplay);				_accordianDisplay.extend(0);				addEventListener(MouseEvent.CLICK, clickHandler);				model.addEventListener(ModelEvent.COURSE_SET, modelCourseSetHandler);		model.addEventListener(ModelEvent.INGREDIENT_SET, modelIngredientSetHandler);		model.addEventListener(ModelEvent.ACTIVE_TIME_SET, modelActiveTimeSetHandler);				addEventListener("AccordianClick", accordianClickHandler);	}//-------------------------------------------------------------// PRIVATE METHODS	//-------------------------------------------------------------	private function displaySearchButton(pDelay:Number = 0):void 	{		if (!_searchButton) 		{			_searchButton = new SearchButton('search', 0);						_searchButton.visible = false;						trace('add search btn')						addChild(_searchButton);		}				if (_searchButton.visible == false)		{			trace('da')			_searchButton.alpha = 0;			_searchButton.visible = true;			_searchButton.y = _accordianDisplay.getSectionHeight(2) - 2;					TweenLite.to(_searchButton, .4, {autoAlpha: 1, delay: pDelay});		}	}//-------------------------------------------------------------// EVENT HANDLERS//-------------------------------------------------------------	private function clickHandler(evt:MouseEvent):void 	{		if (evt.target is CourseButton) _model.course = evt.target.id;					if (evt.target is IngredientButton) _model.ingredient = evt.target.id;					if (evt.target is TimeButton) _model.activeTime = evt.target.id;				if (evt.target is SearchButton)		{			_model.search();			TweenLite.to(this, .4, {autoAlpha: 0});			_searchButton.visible = false;			//August 14: stripping out EW			//EW.trackInteraction('search-clicks');		}		else if (!(evt.target is TimeButton))		{			if(_searchButton) _searchButton.visible = false;		}	}		private function accordianClickHandler(evt:Event):void 	{		if(_accordianDisplay.currentSection == 2) displaySearchButton(.3);	}		private function modelCourseSetHandler(evt:ModelEvent):void 	{		_ingredientTabSection.addSelections();		_accordianDisplay.updateSection(_ingredientTabSection);		_accordianDisplay.extend(1);	}		private function modelIngredientSetHandler(evt:ModelEvent):void 	{		_timeTabSection.addSelections();		_accordianDisplay.updateSection(_timeTabSection);		_accordianDisplay.extend(2);	}		private function modelActiveTimeSetHandler(evt:ModelEvent):void 	{		displaySearchButton();	}	//-------------------------------------------------------------// GETTER / SETTERS//-------------------------------------------------------------	//-------------------------------------------------------------// PUBLIC METHODS//-------------------------------------------------------------	public function resetView():void 	{		_accordianDisplay.reset();		_courseTabSection.clear();	}//-------------------------------------------------------------// END OF CLASS	//-------------------------------------------------------------}}